  version: "3.8"
  services:

    clothes-store:
      image: azuladotoujours/clothesstore
      environment:
        - ENV=prod
        - NODE_ENV=production
        - PROD_DATABASE_URL= postgres://{PROD_DB_USER}:{PROD_DB_PWD}@db-prod:5432/{PROD_DB}
        - PORT=8080
        - PROD_HOST=0.0.0.0
        - AWS_ACCESS_KEY={AWS_IAM_KEY}
        - AWS_SECRET_ACCESS_KEY={AWS_SECRET_IAM_KEY}
        - REGION={REGION}
        - PROD_BUCKET={S3_BUCKET}
      ports:
        - 8080:8080
      deploy:
        replicas: 1
        update_config:
          parallelism: 1
          order: start-first
          failure_action: rollback

    db-prod:
      image: postgres
      environment: 
        - POSTGRES_DB={PROD_DB}
        - POSTGRES_USER={PROD_DB_USER}
        - POSTGRES_PASSWORD={PROD_DB_PWD}
      ports:
        - 5555:5432
      volumes:
        - prod-volume:/var/lib/postgresql/data

    db-test:
      image: postgres
      environment: 
        - POSTGRES_DB={TEST_DB}
        - POSTGRES_USER={TEST_DB_USER}
        - POSTGRES_PASSWORD={TEST_DB_PWD}
      ports:
        - 5454:5432
      volumes:
        - test-volume:/var/lib/postgresql/data

    jenkins:
      user: root
      image: "jenkinsci/blueocean"
      ports:
        - "8081:8080"
      volumes:
        - jenkins_data:/var/jenkins_home
        - /usr/bin/docker:/usr/bin/docker
        - /var/run/docker.sock:/var/run/docker.sock
      deploy:
        replicas: 1
        update_config:
          parallelism: 1
          order: start-first
          failure_action: rollback

  volumes:
    jenkins_data:
    test-volume:
    prod-volume: